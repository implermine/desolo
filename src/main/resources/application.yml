# ===========================================
# 공통 설정 (모든 환경에서 사용)
# ===========================================
spring:
  application:
    name: desolo

  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
    open-in-view: false

server:
  port: ${SERVER_PORT:8080}

---
# ===========================================
# LOCAL 환경 (개발용)
# ===========================================
spring:
  config:
    activate:
      on-profile: local

  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${POSTGRES_DB:desolo_local}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 5

  jpa:
    hibernate:
      ddl-auto: update  # 개발 시 스키마 자동 업데이트
    show-sql: true

  sql:
    init:
      mode: always  # 초기 스크립트 실행

logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    com.example: DEBUG
    io.implermine.desolo: DEBUG

---
# ===========================================
# PROD 환경 (운영용)
# ===========================================
spring:
  config:
    activate:
      on-profile: prod

  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT:5432}/${POSTGRES_DB}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1200000

  jpa:
    hibernate:
      ddl-auto: validate  # 운영 시 스키마 변경 금지
    show-sql: false

  sql:
    init:
      mode: never  # 운영에서는 초기 스크립트 실행 안함

logging:
  level:
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    com.example: INFO
    io.implermine.desolo: INFO
    root: INFO